import { config, validateConfig } from './config/settings';
import { TelegramClientService } from './services/telegram-client.service';
import { MonitorService } from './services/monitor.service';
import { Storage } from './utils/storage';

console.log('='.repeat(60));
console.log('üö® ROCKET ALERT MONITOR üö®');
console.log('–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ä–∞–∫–µ—Ç–Ω–∏—Ö –∞—Ç–∞–∫');
console.log('='.repeat(60));
console.log('');

async function main() {
    try {
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        console.log('[Main] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...');
        validateConfig();
        console.log('');

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Storage
        console.log('[Main] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ö–æ–≤–∏—â–∞...');
        await Storage.init();
        console.log('');

        // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram
        console.log('[Main] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram –∫–ª—ñ—î–Ω—Ç–∞...');
        const telegramService = new TelegramClientService();
        await telegramService.connect();
        console.log('');

        // –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
        console.log('[Main] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É...');
        const monitorService = new MonitorService(telegramService);
        await monitorService.startMonitoring();
        console.log('');

        console.log('='.repeat(60));
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ —Ç–∞ –ø—Ä–∞—Ü—é—î!');
        console.log('='.repeat(60));
        console.log('');

        // –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É
        const shutdown = async (signal: string) => {
            console.log('');
            console.log(`[Main] –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª ${signal}, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏...`);
            
            monitorService.stopMonitoring();
            await telegramService.disconnect();
            
            console.log('[Main] –°–∏—Å—Ç–µ–º—É –∑—É–ø–∏–Ω–µ–Ω–æ');
            process.exit(0);
        };

        process.on('SIGINT', () => shutdown('SIGINT'));
        process.on('SIGTERM', () => shutdown('SIGTERM'));

    } catch (error) {
        console.error('');
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –ü–†–ò –ó–ê–ü–£–°–ö–£:');
        console.error(error);
        console.error('');
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
main().catch((error) => {
    console.error('–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
    process.exit(1);
});
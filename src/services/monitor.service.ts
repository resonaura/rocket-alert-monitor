import { TelegramClientService } from './telegram-client.service';
import { CallService } from './call.service';
import { AIAnalyzerService } from './ai-analyzer.service';
import { config } from '../config/settings';
import { Api } from 'telegram';

export class MonitorService {
    private telegramService: TelegramClientService;
    private callService: CallService;
    private aiAnalyzer: AIAnalyzerService;
    private checkInterval: number;
    private isAlerting: boolean = false;
    private monitorInterval: NodeJS.Timeout | null = null;

    constructor(telegramService: TelegramClientService) {
        this.telegramService = telegramService;
        this.callService = new CallService(telegramService);
        this.aiAnalyzer = new AIAnalyzerService();
        this.checkInterval = config.checkInterval;
    }

    public async startMonitoring(): Promise<void> {
        console.log('[Monitor] –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É...');
        console.log(`[Monitor] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ ${this.checkInterval / 1000} —Å–µ–∫—É–Ω–¥`);

        // –ü–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–¥—Ä–∞–∑—É
        await this.checkForNewPosts();

        // –ü–æ—Ç—ñ–º –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º
        this.monitorInterval = setInterval(async () => {
            if (!this.isAlerting) {
                await this.checkForNewPosts();
            } else {
                console.log('[Monitor] –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É - –π–¥–µ –ø—Ä–æ—Ü–µ—Å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
            }
        }, this.checkInterval);

        console.log('[Monitor] –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–æ!');
    }

    public stopMonitoring(): void {
        if (this.monitorInterval) {
            clearInterval(this.monitorInterval);
            this.monitorInterval = null;
            console.log('[Monitor] –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑—É–ø–∏–Ω–µ–Ω–æ');
        }
    }

    private async checkForNewPosts(): Promise<void> {
        try {
            console.log('[Monitor] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...');
            const newMessages = await this.telegramService.getNewMessages();
            
            if (newMessages.length > 0) {
                console.log(`[Monitor] –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: ${newMessages.length}`);
                
                // –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ AI (–ø–∞–∫–µ—Ç–æ–º)
                const analyses = await this.aiAnalyzer.analyzeMessages(newMessages);
                
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É
                for (let i = 0; i < newMessages.length; i++) {
                    const message = newMessages[i];
                    const analysis = analyses[i];
                    
                    if (!analysis) continue;
                    
                    console.log(`[Monitor] üìä –ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ${i + 1}:`);
                    console.log(`  –†—ñ–≤–µ–Ω—å: ${analysis.threatLevel} (${analysis.confidence}%)`);
                    console.log(`  –ü—Ä–∏—á–∏–Ω–∞: ${analysis.reason}`);
                    console.log(`  –¢–µ–∫—Å—Ç: ${message.message?.substring(0, 100)}...`);
                    
                    // –ß–ï–†–í–û–ù–ò–ô –ö–û–î - —Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ –Ω–µ–≥–∞–π–Ω–æ!
                    if (analysis.needCall) {
                        console.log(`[Monitor] üö®üö®üö® –ö–†–ò–¢–ò–ß–ù–ê –ó–ê–ì–†–û–ó–ê! –¢–ï–õ–ï–§–û–ù–£–Ñ–ú–û!`);
                        await this.alertUserWithCall(message, analysis);
                        break; // –û–±—Ä–æ–±–ª—è—î–º–æ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—É –∫—Ä–∏—Ç–∏—á–Ω—É –∑–∞–≥—Ä–æ–∑—É
                    }
                    
                    // –ü–û–ú–ê–†–ê–ù–ß–ï–í–ò–ô/–§–Ü–û–õ–ï–¢–û–í–ò–ô - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    if (analysis.needMessage) {
                        console.log(`[Monitor] ‚ö†Ô∏è  –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≥—Ä–æ–∑—É. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);
                        await this.alertUserWithMessage(message, analysis);
                        // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —ñ–Ω—à—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    }
                }
            } else {
                console.log('[Monitor] –ù–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –Ω–µ–º–∞—î');
            }
        } catch (error) {
            console.error('[Monitor] ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:', error);
        }
    }

    /**
     * –ö—Ä–∏—Ç–∏—á–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞ - —Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ
     */
    private async alertUserWithCall(message: Api.Message, analysis: any): Promise<void> {
        this.isAlerting = true;
        console.log('[Monitor] üö® –ß–ï–†–í–û–ù–ò–ô –ö–û–î! –ü–æ—á–∏–Ω–∞—î–º–æ —Å–µ—Ä—ñ—é –¥–∑–≤—ñ–Ω–∫—ñ–≤...');
        console.log(`[Monitor] –ü—Ä–∏—á–∏–Ω–∞: ${analysis.reason}`);

        try {
            // –°–ø–æ—á–∞—Ç–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—è–º–∏
            const alertMessage = `üö®üö®üö® –ö–†–ò–¢–ò–ß–ù–ê –ó–ê–ì–†–û–ó–ê!\n\n` +
                `–†—ñ–≤–µ–Ω—å: ${this.getThreatLevelText(analysis.threatLevel)}\n` +
                `–ú—ñ—Å—Ç–æ: ${config.monitoredCity}\n` +
                `–í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${analysis.confidence}%\n\n` +
                `–ü—Ä–∏—á–∏–Ω–∞: ${analysis.reason}\n\n` +
                `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞–Ω–∞–ª—É:\n${message.message || '[–ø—É—Å—Ç–æ]'}\n\n` +
                `‚ö†Ô∏è –ù–ï–ì–ê–ô–ù–û –í –£–ö–†–ò–¢–¢–Ø!`;
            
            await this.telegramService.sendMessage(config.callUserId, alertMessage);
            
            // –ü–æ—Ç—ñ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ
            await this.callService.makeCall();
            
            console.log('[Monitor] ‚úÖ –ü—Ä–æ—Ü–µ—Å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        } catch (error) {
            console.error('[Monitor] ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
        } finally {
            this.isAlerting = false;
            console.log('[Monitor] –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥...');
        }
    }

    /**
     * –°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å –∑–∞–≥—Ä–æ–∑–∏ - —Ç—ñ–ª—å–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    private async alertUserWithMessage(message: Api.Message, analysis: any): Promise<void> {
        console.log('[Monitor] ÔøΩ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–∂—É–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');

        try {
            const emoji = this.getThreatEmoji(analysis.threatLevel);
            const alertMessage = `${emoji} –£–í–ê–ì–ê: –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞\n\n` +
                `–†—ñ–≤–µ–Ω—å: ${this.getThreatLevelText(analysis.threatLevel)}\n` +
                `–ú—ñ—Å—Ç–æ: ${config.monitoredCity}\n` +
                `–í–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å: ${analysis.confidence}%\n\n` +
                `–ü—Ä–∏—á–∏–Ω–∞: ${analysis.reason}\n\n` +
                `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞–Ω–∞–ª—É:\n${message.message || '[–ø—É—Å—Ç–æ]'}\n\n` +
                `–°—Ç–µ–∂ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ –≤ –∫–∞–Ω–∞–ª—ñ!`;
            
            await this.telegramService.sendMessage(config.callUserId, alertMessage);
            console.log('[Monitor] ‚úÖ –ü–æ–ø–µ—Ä–µ–¥–∂—É–≤–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
        } catch (error) {
            console.error('[Monitor] ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
        }
    }

    private getThreatEmoji(level: string): string {
        switch (level) {
            case 'red': return 'üü•';
            case 'orange': return 'üüß';
            case 'purple': return 'üü™';
            case 'yellow': return 'üü®';
            default: return 'üü©';
        }
    }

    private getThreatLevelText(level: string): string {
        switch (level) {
            case 'red': return 'üü• –ß–ï–†–í–û–ù–ò–ô (–∫—Ä–∏—Ç–∏—á–Ω–∞ –Ω–µ–±–µ–∑–ø–µ–∫–∞)';
            case 'orange': return 'üüß –ü–û–ú–ê–†–ê–ù–ß–ï–í–ò–ô (–Ω–µ–±–µ–∑–ø–µ—á–Ω–æ)';
            case 'purple': return 'üü™ –§–Ü–û–õ–ï–¢–û–í–ò–ô (–±–∞–ª—ñ—Å—Ç–∏—á–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞)';
            case 'yellow': return 'üü® –ñ–û–í–¢–ò–ô (–≤—ñ–¥–Ω–æ—Å–Ω–æ –±–µ–∑–ø–µ—á–Ω–æ)';
            default: return 'üü© –ó–ï–õ–ï–ù–ò–ô (–±–µ–∑–ø–µ—á–Ω–æ)';
        }
    }
}
